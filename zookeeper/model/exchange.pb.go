// Code generated by protoc-gen-go. DO NOT EDIT.
// source: model/exchange.proto

package model

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ConnectRequest struct {
	ProtocolVersion int32  `protobuf:"varint,1,opt,name=protocolVersion" json:"protocolVersion,omitempty"`
	LastZxidSeen    int64  `protobuf:"varint,2,opt,name=lastZxidSeen" json:"lastZxidSeen,omitempty"`
	TimeOut         int32  `protobuf:"varint,3,opt,name=timeOut" json:"timeOut,omitempty"`
	SessionId       int64  `protobuf:"varint,4,opt,name=sessionId" json:"sessionId,omitempty"`
	Passwd          []byte `protobuf:"bytes,5,opt,name=passwd,proto3" json:"passwd,omitempty"`
}

func (m *ConnectRequest) Reset()                    { *m = ConnectRequest{} }
func (m *ConnectRequest) String() string            { return proto.CompactTextString(m) }
func (*ConnectRequest) ProtoMessage()               {}
func (*ConnectRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *ConnectRequest) GetProtocolVersion() int32 {
	if m != nil {
		return m.ProtocolVersion
	}
	return 0
}

func (m *ConnectRequest) GetLastZxidSeen() int64 {
	if m != nil {
		return m.LastZxidSeen
	}
	return 0
}

func (m *ConnectRequest) GetTimeOut() int32 {
	if m != nil {
		return m.TimeOut
	}
	return 0
}

func (m *ConnectRequest) GetSessionId() int64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *ConnectRequest) GetPasswd() []byte {
	if m != nil {
		return m.Passwd
	}
	return nil
}

type ConnectResponse struct {
	ProtocolVersion int32  `protobuf:"varint,1,opt,name=protocolVersion" json:"protocolVersion,omitempty"`
	TimeOut         int32  `protobuf:"varint,2,opt,name=timeOut" json:"timeOut,omitempty"`
	SessionId       int64  `protobuf:"varint,3,opt,name=sessionId" json:"sessionId,omitempty"`
	Passwd          []byte `protobuf:"bytes,4,opt,name=passwd,proto3" json:"passwd,omitempty"`
}

func (m *ConnectResponse) Reset()                    { *m = ConnectResponse{} }
func (m *ConnectResponse) String() string            { return proto.CompactTextString(m) }
func (*ConnectResponse) ProtoMessage()               {}
func (*ConnectResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *ConnectResponse) GetProtocolVersion() int32 {
	if m != nil {
		return m.ProtocolVersion
	}
	return 0
}

func (m *ConnectResponse) GetTimeOut() int32 {
	if m != nil {
		return m.TimeOut
	}
	return 0
}

func (m *ConnectResponse) GetSessionId() int64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *ConnectResponse) GetPasswd() []byte {
	if m != nil {
		return m.Passwd
	}
	return nil
}

type SetWatches struct {
	RelativeZxid int64    `protobuf:"varint,1,opt,name=relativeZxid" json:"relativeZxid,omitempty"`
	DataWatches  []string `protobuf:"bytes,2,rep,name=dataWatches" json:"dataWatches,omitempty"`
	ExistWatches []string `protobuf:"bytes,3,rep,name=existWatches" json:"existWatches,omitempty"`
	ChildWatches []string `protobuf:"bytes,4,rep,name=childWatches" json:"childWatches,omitempty"`
}

func (m *SetWatches) Reset()                    { *m = SetWatches{} }
func (m *SetWatches) String() string            { return proto.CompactTextString(m) }
func (*SetWatches) ProtoMessage()               {}
func (*SetWatches) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *SetWatches) GetRelativeZxid() int64 {
	if m != nil {
		return m.RelativeZxid
	}
	return 0
}

func (m *SetWatches) GetDataWatches() []string {
	if m != nil {
		return m.DataWatches
	}
	return nil
}

func (m *SetWatches) GetExistWatches() []string {
	if m != nil {
		return m.ExistWatches
	}
	return nil
}

func (m *SetWatches) GetChildWatches() []string {
	if m != nil {
		return m.ChildWatches
	}
	return nil
}

type RequestHeader struct {
	Xid  int32 `protobuf:"varint,1,opt,name=xid" json:"xid,omitempty"`
	Type int32 `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
}

func (m *RequestHeader) Reset()                    { *m = RequestHeader{} }
func (m *RequestHeader) String() string            { return proto.CompactTextString(m) }
func (*RequestHeader) ProtoMessage()               {}
func (*RequestHeader) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *RequestHeader) GetXid() int32 {
	if m != nil {
		return m.Xid
	}
	return 0
}

func (m *RequestHeader) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

type MultiHeader struct {
	Type int32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Done bool  `protobuf:"varint,2,opt,name=done" json:"done,omitempty"`
	Err  int32 `protobuf:"varint,3,opt,name=err" json:"err,omitempty"`
}

func (m *MultiHeader) Reset()                    { *m = MultiHeader{} }
func (m *MultiHeader) String() string            { return proto.CompactTextString(m) }
func (*MultiHeader) ProtoMessage()               {}
func (*MultiHeader) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *MultiHeader) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *MultiHeader) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

func (m *MultiHeader) GetErr() int32 {
	if m != nil {
		return m.Err
	}
	return 0
}

type AuthPacket struct {
	Type   int32  `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Scheme string `protobuf:"bytes,2,opt,name=scheme" json:"scheme,omitempty"`
	Auth   []byte `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (m *AuthPacket) Reset()                    { *m = AuthPacket{} }
func (m *AuthPacket) String() string            { return proto.CompactTextString(m) }
func (*AuthPacket) ProtoMessage()               {}
func (*AuthPacket) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *AuthPacket) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *AuthPacket) GetScheme() string {
	if m != nil {
		return m.Scheme
	}
	return ""
}

func (m *AuthPacket) GetAuth() []byte {
	if m != nil {
		return m.Auth
	}
	return nil
}

type ReplyHeader struct {
	Xid  int32 `protobuf:"varint,1,opt,name=xid" json:"xid,omitempty"`
	Zxid int64 `protobuf:"varint,2,opt,name=zxid" json:"zxid,omitempty"`
	Err  int32 `protobuf:"varint,3,opt,name=err" json:"err,omitempty"`
}

func (m *ReplyHeader) Reset()                    { *m = ReplyHeader{} }
func (m *ReplyHeader) String() string            { return proto.CompactTextString(m) }
func (*ReplyHeader) ProtoMessage()               {}
func (*ReplyHeader) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *ReplyHeader) GetXid() int32 {
	if m != nil {
		return m.Xid
	}
	return 0
}

func (m *ReplyHeader) GetZxid() int64 {
	if m != nil {
		return m.Zxid
	}
	return 0
}

func (m *ReplyHeader) GetErr() int32 {
	if m != nil {
		return m.Err
	}
	return 0
}

type GetDataRequest struct {
	Path  string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Watch bool   `protobuf:"varint,2,opt,name=watch" json:"watch,omitempty"`
}

func (m *GetDataRequest) Reset()                    { *m = GetDataRequest{} }
func (m *GetDataRequest) String() string            { return proto.CompactTextString(m) }
func (*GetDataRequest) ProtoMessage()               {}
func (*GetDataRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *GetDataRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *GetDataRequest) GetWatch() bool {
	if m != nil {
		return m.Watch
	}
	return false
}

type SetDataRequest struct {
	Path    string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Data    []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Version int32  `protobuf:"varint,3,opt,name=version" json:"version,omitempty"`
}

func (m *SetDataRequest) Reset()                    { *m = SetDataRequest{} }
func (m *SetDataRequest) String() string            { return proto.CompactTextString(m) }
func (*SetDataRequest) ProtoMessage()               {}
func (*SetDataRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *SetDataRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *SetDataRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SetDataRequest) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

type SetDataResponse struct {
	Stat *Stat `protobuf:"bytes,1,opt,name=stat" json:"stat,omitempty"`
}

func (m *SetDataResponse) Reset()                    { *m = SetDataResponse{} }
func (m *SetDataResponse) String() string            { return proto.CompactTextString(m) }
func (*SetDataResponse) ProtoMessage()               {}
func (*SetDataResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *SetDataResponse) GetStat() *Stat {
	if m != nil {
		return m.Stat
	}
	return nil
}

type GetSASLRequest struct {
	Token []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (m *GetSASLRequest) Reset()                    { *m = GetSASLRequest{} }
func (m *GetSASLRequest) String() string            { return proto.CompactTextString(m) }
func (*GetSASLRequest) ProtoMessage()               {}
func (*GetSASLRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

func (m *GetSASLRequest) GetToken() []byte {
	if m != nil {
		return m.Token
	}
	return nil
}

type SetSASLRequest struct {
	Token []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (m *SetSASLRequest) Reset()                    { *m = SetSASLRequest{} }
func (m *SetSASLRequest) String() string            { return proto.CompactTextString(m) }
func (*SetSASLRequest) ProtoMessage()               {}
func (*SetSASLRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{11} }

func (m *SetSASLRequest) GetToken() []byte {
	if m != nil {
		return m.Token
	}
	return nil
}

type SetSASLResponse struct {
	Token []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (m *SetSASLResponse) Reset()                    { *m = SetSASLResponse{} }
func (m *SetSASLResponse) String() string            { return proto.CompactTextString(m) }
func (*SetSASLResponse) ProtoMessage()               {}
func (*SetSASLResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{12} }

func (m *SetSASLResponse) GetToken() []byte {
	if m != nil {
		return m.Token
	}
	return nil
}

type CreateRequest struct {
	Path  string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Data  []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Acl   []*ACL `protobuf:"bytes,3,rep,name=acl" json:"acl,omitempty"`
	Flags int32  `protobuf:"varint,4,opt,name=flags" json:"flags,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{13} }

func (m *CreateRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *CreateRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateRequest) GetAcl() []*ACL {
	if m != nil {
		return m.Acl
	}
	return nil
}

func (m *CreateRequest) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

type DeleteRequest struct {
	Path    string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Version int32  `protobuf:"varint,2,opt,name=version" json:"version,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{14} }

func (m *DeleteRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *DeleteRequest) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

type GetChildrenRequest struct {
	Path  string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Watch bool   `protobuf:"varint,2,opt,name=watch" json:"watch,omitempty"`
}

func (m *GetChildrenRequest) Reset()                    { *m = GetChildrenRequest{} }
func (m *GetChildrenRequest) String() string            { return proto.CompactTextString(m) }
func (*GetChildrenRequest) ProtoMessage()               {}
func (*GetChildrenRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{15} }

func (m *GetChildrenRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *GetChildrenRequest) GetWatch() bool {
	if m != nil {
		return m.Watch
	}
	return false
}

type GetChildren2Request struct {
	Path  string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Watch bool   `protobuf:"varint,2,opt,name=watch" json:"watch,omitempty"`
}

func (m *GetChildren2Request) Reset()                    { *m = GetChildren2Request{} }
func (m *GetChildren2Request) String() string            { return proto.CompactTextString(m) }
func (*GetChildren2Request) ProtoMessage()               {}
func (*GetChildren2Request) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{16} }

func (m *GetChildren2Request) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *GetChildren2Request) GetWatch() bool {
	if m != nil {
		return m.Watch
	}
	return false
}

type CheckVersionRequest struct {
	Path    string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Version int32  `protobuf:"varint,2,opt,name=version" json:"version,omitempty"`
}

func (m *CheckVersionRequest) Reset()                    { *m = CheckVersionRequest{} }
func (m *CheckVersionRequest) String() string            { return proto.CompactTextString(m) }
func (*CheckVersionRequest) ProtoMessage()               {}
func (*CheckVersionRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{17} }

func (m *CheckVersionRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *CheckVersionRequest) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

type GetMaxChildrenRequest struct {
	Path string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
}

func (m *GetMaxChildrenRequest) Reset()                    { *m = GetMaxChildrenRequest{} }
func (m *GetMaxChildrenRequest) String() string            { return proto.CompactTextString(m) }
func (*GetMaxChildrenRequest) ProtoMessage()               {}
func (*GetMaxChildrenRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{18} }

func (m *GetMaxChildrenRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type GetMaxChildrenResponse struct {
	Max int32 `protobuf:"varint,1,opt,name=max" json:"max,omitempty"`
}

func (m *GetMaxChildrenResponse) Reset()                    { *m = GetMaxChildrenResponse{} }
func (m *GetMaxChildrenResponse) String() string            { return proto.CompactTextString(m) }
func (*GetMaxChildrenResponse) ProtoMessage()               {}
func (*GetMaxChildrenResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{19} }

func (m *GetMaxChildrenResponse) GetMax() int32 {
	if m != nil {
		return m.Max
	}
	return 0
}

type SetMaxChildrenRequest struct {
	Path string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Max  int32  `protobuf:"varint,2,opt,name=max" json:"max,omitempty"`
}

func (m *SetMaxChildrenRequest) Reset()                    { *m = SetMaxChildrenRequest{} }
func (m *SetMaxChildrenRequest) String() string            { return proto.CompactTextString(m) }
func (*SetMaxChildrenRequest) ProtoMessage()               {}
func (*SetMaxChildrenRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{20} }

func (m *SetMaxChildrenRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *SetMaxChildrenRequest) GetMax() int32 {
	if m != nil {
		return m.Max
	}
	return 0
}

type SyncRequest struct {
	Path string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
}

func (m *SyncRequest) Reset()                    { *m = SyncRequest{} }
func (m *SyncRequest) String() string            { return proto.CompactTextString(m) }
func (*SyncRequest) ProtoMessage()               {}
func (*SyncRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{21} }

func (m *SyncRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type SyncResponse struct {
	Path string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
}

func (m *SyncResponse) Reset()                    { *m = SyncResponse{} }
func (m *SyncResponse) String() string            { return proto.CompactTextString(m) }
func (*SyncResponse) ProtoMessage()               {}
func (*SyncResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{22} }

func (m *SyncResponse) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type GetACLRequest struct {
	Path string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
}

func (m *GetACLRequest) Reset()                    { *m = GetACLRequest{} }
func (m *GetACLRequest) String() string            { return proto.CompactTextString(m) }
func (*GetACLRequest) ProtoMessage()               {}
func (*GetACLRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{23} }

func (m *GetACLRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type SetACLRequest struct {
	Path    string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Acl     []*ACL `protobuf:"bytes,2,rep,name=acl" json:"acl,omitempty"`
	Version int32  `protobuf:"varint,3,opt,name=version" json:"version,omitempty"`
}

func (m *SetACLRequest) Reset()                    { *m = SetACLRequest{} }
func (m *SetACLRequest) String() string            { return proto.CompactTextString(m) }
func (*SetACLRequest) ProtoMessage()               {}
func (*SetACLRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{24} }

func (m *SetACLRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *SetACLRequest) GetAcl() []*ACL {
	if m != nil {
		return m.Acl
	}
	return nil
}

func (m *SetACLRequest) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

type SetACLResponse struct {
	Stat *Stat `protobuf:"bytes,1,opt,name=stat" json:"stat,omitempty"`
}

func (m *SetACLResponse) Reset()                    { *m = SetACLResponse{} }
func (m *SetACLResponse) String() string            { return proto.CompactTextString(m) }
func (*SetACLResponse) ProtoMessage()               {}
func (*SetACLResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{25} }

func (m *SetACLResponse) GetStat() *Stat {
	if m != nil {
		return m.Stat
	}
	return nil
}

type WatcherEvent struct {
	Type  int32  `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	State int32  `protobuf:"varint,2,opt,name=state" json:"state,omitempty"`
	Path  string `protobuf:"bytes,3,opt,name=path" json:"path,omitempty"`
}

func (m *WatcherEvent) Reset()                    { *m = WatcherEvent{} }
func (m *WatcherEvent) String() string            { return proto.CompactTextString(m) }
func (*WatcherEvent) ProtoMessage()               {}
func (*WatcherEvent) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{26} }

func (m *WatcherEvent) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *WatcherEvent) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *WatcherEvent) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type ErrorResponse struct {
	Err int32 `protobuf:"varint,1,opt,name=err" json:"err,omitempty"`
}

func (m *ErrorResponse) Reset()                    { *m = ErrorResponse{} }
func (m *ErrorResponse) String() string            { return proto.CompactTextString(m) }
func (*ErrorResponse) ProtoMessage()               {}
func (*ErrorResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{27} }

func (m *ErrorResponse) GetErr() int32 {
	if m != nil {
		return m.Err
	}
	return 0
}

type CreateResponse struct {
	Path string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{28} }

func (m *CreateResponse) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type ExistsRequest struct {
	Path  string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Watch bool   `protobuf:"varint,2,opt,name=watch" json:"watch,omitempty"`
}

func (m *ExistsRequest) Reset()                    { *m = ExistsRequest{} }
func (m *ExistsRequest) String() string            { return proto.CompactTextString(m) }
func (*ExistsRequest) ProtoMessage()               {}
func (*ExistsRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{29} }

func (m *ExistsRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *ExistsRequest) GetWatch() bool {
	if m != nil {
		return m.Watch
	}
	return false
}

type ExistsResponse struct {
	Stat *Stat `protobuf:"bytes,1,opt,name=stat" json:"stat,omitempty"`
}

func (m *ExistsResponse) Reset()                    { *m = ExistsResponse{} }
func (m *ExistsResponse) String() string            { return proto.CompactTextString(m) }
func (*ExistsResponse) ProtoMessage()               {}
func (*ExistsResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{30} }

func (m *ExistsResponse) GetStat() *Stat {
	if m != nil {
		return m.Stat
	}
	return nil
}

type GetDataResponse struct {
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Stat *Stat  `protobuf:"bytes,2,opt,name=stat" json:"stat,omitempty"`
}

func (m *GetDataResponse) Reset()                    { *m = GetDataResponse{} }
func (m *GetDataResponse) String() string            { return proto.CompactTextString(m) }
func (*GetDataResponse) ProtoMessage()               {}
func (*GetDataResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{31} }

func (m *GetDataResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetDataResponse) GetStat() *Stat {
	if m != nil {
		return m.Stat
	}
	return nil
}

type GetChildrenResponse struct {
	Children []string `protobuf:"bytes,1,rep,name=children" json:"children,omitempty"`
}

func (m *GetChildrenResponse) Reset()                    { *m = GetChildrenResponse{} }
func (m *GetChildrenResponse) String() string            { return proto.CompactTextString(m) }
func (*GetChildrenResponse) ProtoMessage()               {}
func (*GetChildrenResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{32} }

func (m *GetChildrenResponse) GetChildren() []string {
	if m != nil {
		return m.Children
	}
	return nil
}

type GetChildren2Response struct {
	Children []string `protobuf:"bytes,1,rep,name=children" json:"children,omitempty"`
	Stat     *Stat    `protobuf:"bytes,2,opt,name=stat" json:"stat,omitempty"`
}

func (m *GetChildren2Response) Reset()                    { *m = GetChildren2Response{} }
func (m *GetChildren2Response) String() string            { return proto.CompactTextString(m) }
func (*GetChildren2Response) ProtoMessage()               {}
func (*GetChildren2Response) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{33} }

func (m *GetChildren2Response) GetChildren() []string {
	if m != nil {
		return m.Children
	}
	return nil
}

func (m *GetChildren2Response) GetStat() *Stat {
	if m != nil {
		return m.Stat
	}
	return nil
}

type GetACLResponse struct {
	Acl  []*ACL `protobuf:"bytes,1,rep,name=acl" json:"acl,omitempty"`
	Stat *Stat  `protobuf:"bytes,2,opt,name=stat" json:"stat,omitempty"`
}

func (m *GetACLResponse) Reset()                    { *m = GetACLResponse{} }
func (m *GetACLResponse) String() string            { return proto.CompactTextString(m) }
func (*GetACLResponse) ProtoMessage()               {}
func (*GetACLResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{34} }

func (m *GetACLResponse) GetAcl() []*ACL {
	if m != nil {
		return m.Acl
	}
	return nil
}

func (m *GetACLResponse) GetStat() *Stat {
	if m != nil {
		return m.Stat
	}
	return nil
}

func init() {
	proto.RegisterType((*ConnectRequest)(nil), "model.ConnectRequest")
	proto.RegisterType((*ConnectResponse)(nil), "model.ConnectResponse")
	proto.RegisterType((*SetWatches)(nil), "model.SetWatches")
	proto.RegisterType((*RequestHeader)(nil), "model.RequestHeader")
	proto.RegisterType((*MultiHeader)(nil), "model.MultiHeader")
	proto.RegisterType((*AuthPacket)(nil), "model.AuthPacket")
	proto.RegisterType((*ReplyHeader)(nil), "model.ReplyHeader")
	proto.RegisterType((*GetDataRequest)(nil), "model.GetDataRequest")
	proto.RegisterType((*SetDataRequest)(nil), "model.SetDataRequest")
	proto.RegisterType((*SetDataResponse)(nil), "model.SetDataResponse")
	proto.RegisterType((*GetSASLRequest)(nil), "model.GetSASLRequest")
	proto.RegisterType((*SetSASLRequest)(nil), "model.SetSASLRequest")
	proto.RegisterType((*SetSASLResponse)(nil), "model.SetSASLResponse")
	proto.RegisterType((*CreateRequest)(nil), "model.CreateRequest")
	proto.RegisterType((*DeleteRequest)(nil), "model.DeleteRequest")
	proto.RegisterType((*GetChildrenRequest)(nil), "model.GetChildrenRequest")
	proto.RegisterType((*GetChildren2Request)(nil), "model.GetChildren2Request")
	proto.RegisterType((*CheckVersionRequest)(nil), "model.CheckVersionRequest")
	proto.RegisterType((*GetMaxChildrenRequest)(nil), "model.GetMaxChildrenRequest")
	proto.RegisterType((*GetMaxChildrenResponse)(nil), "model.GetMaxChildrenResponse")
	proto.RegisterType((*SetMaxChildrenRequest)(nil), "model.SetMaxChildrenRequest")
	proto.RegisterType((*SyncRequest)(nil), "model.SyncRequest")
	proto.RegisterType((*SyncResponse)(nil), "model.SyncResponse")
	proto.RegisterType((*GetACLRequest)(nil), "model.GetACLRequest")
	proto.RegisterType((*SetACLRequest)(nil), "model.SetACLRequest")
	proto.RegisterType((*SetACLResponse)(nil), "model.SetACLResponse")
	proto.RegisterType((*WatcherEvent)(nil), "model.WatcherEvent")
	proto.RegisterType((*ErrorResponse)(nil), "model.ErrorResponse")
	proto.RegisterType((*CreateResponse)(nil), "model.CreateResponse")
	proto.RegisterType((*ExistsRequest)(nil), "model.ExistsRequest")
	proto.RegisterType((*ExistsResponse)(nil), "model.ExistsResponse")
	proto.RegisterType((*GetDataResponse)(nil), "model.GetDataResponse")
	proto.RegisterType((*GetChildrenResponse)(nil), "model.GetChildrenResponse")
	proto.RegisterType((*GetChildren2Response)(nil), "model.GetChildren2Response")
	proto.RegisterType((*GetACLResponse)(nil), "model.GetACLResponse")
}

func init() { proto.RegisterFile("model/exchange.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 804 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0x6d, 0x6b, 0xdb, 0x48,
	0x10, 0x46, 0x96, 0x95, 0x8b, 0xc7, 0x6f, 0x41, 0x71, 0x82, 0x08, 0x81, 0x73, 0x74, 0xc7, 0x9d,
	0xb9, 0x83, 0x94, 0xb8, 0xf4, 0x43, 0x0b, 0x69, 0x09, 0x8e, 0xeb, 0x16, 0x1c, 0x52, 0x56, 0xd0,
	0x42, 0xfb, 0x69, 0x2b, 0x4d, 0x23, 0x63, 0x59, 0x72, 0xb5, 0xeb, 0xc4, 0xe9, 0x5f, 0xe8, 0x3f,
	0xe8, 0x8f, 0xe8, 0x6f, 0x2c, 0xbb, 0xda, 0xb5, 0xe5, 0xe0, 0xf8, 0xa5, 0xdf, 0x76, 0x66, 0x9f,
	0x79, 0xfc, 0xcc, 0xec, 0xcc, 0xc8, 0xd0, 0x18, 0x25, 0x01, 0x46, 0x4f, 0x70, 0xea, 0x87, 0x34,
	0xbe, 0xc1, 0xd3, 0x71, 0x9a, 0xf0, 0xc4, 0xb6, 0xa4, 0xf7, 0x68, 0x2f, 0xbb, 0x0c, 0x28, 0xa7,
	0xd9, 0x85, 0xfb, 0xd3, 0x80, 0x5a, 0x27, 0x89, 0x63, 0xf4, 0x39, 0xc1, 0xaf, 0x13, 0x64, 0xdc,
	0x6e, 0x41, 0x5d, 0xde, 0xf9, 0x49, 0xf4, 0x1e, 0x53, 0x36, 0x48, 0x62, 0xc7, 0x68, 0x1a, 0x2d,
	0x8b, 0x3c, 0x74, 0xdb, 0x2e, 0x54, 0x22, 0xca, 0xf8, 0xc7, 0xe9, 0x20, 0xf0, 0x10, 0x63, 0xa7,
	0xd0, 0x34, 0x5a, 0x26, 0x59, 0xf0, 0xd9, 0x0e, 0xfc, 0xc1, 0x07, 0x23, 0xbc, 0x9e, 0x70, 0xc7,
	0x94, 0x2c, 0xda, 0xb4, 0x8f, 0xa1, 0xc4, 0x90, 0x09, 0xa2, 0xb7, 0x81, 0x53, 0x94, 0xa1, 0x73,
	0x87, 0x7d, 0x08, 0x3b, 0x63, 0xca, 0xd8, 0x5d, 0xe0, 0x58, 0x4d, 0xa3, 0x55, 0x21, 0xca, 0x72,
	0xbf, 0x1b, 0x50, 0x9f, 0x09, 0x66, 0xe3, 0x24, 0x66, 0xb8, 0x85, 0xe2, 0x9c, 0x9a, 0xc2, 0x0a,
	0x35, 0xe6, 0xe3, 0x6a, 0x8a, 0x0b, 0x6a, 0x7e, 0x18, 0x00, 0x1e, 0xf2, 0x0f, 0x94, 0xfb, 0x21,
	0x32, 0x51, 0x90, 0x14, 0x23, 0xca, 0x07, 0xb7, 0x28, 0x0a, 0x20, 0x55, 0x98, 0x64, 0xc1, 0x67,
	0x37, 0xa1, 0x2c, 0xea, 0xaf, 0x42, 0x9c, 0x42, 0xd3, 0x6c, 0x95, 0x48, 0xde, 0x25, 0x58, 0x70,
	0x3a, 0x60, 0x9a, 0xd5, 0x31, 0x25, 0x64, 0xc1, 0x27, 0x30, 0x7e, 0x38, 0x88, 0x02, 0x8d, 0x29,
	0x66, 0x98, 0xbc, 0xcf, 0x7d, 0x06, 0x55, 0xf5, 0xa6, 0x6f, 0x90, 0x06, 0x98, 0xda, 0x7b, 0x60,
	0x6a, 0x55, 0x16, 0x11, 0x47, 0xdb, 0x86, 0x22, 0xbf, 0x1f, 0xa3, 0x2a, 0x86, 0x3c, 0xbb, 0x3d,
	0x28, 0x5f, 0x4d, 0x22, 0x3e, 0x50, 0x41, 0x1a, 0x62, 0xcc, 0x21, 0xc2, 0x17, 0x24, 0x71, 0x16,
	0xb6, 0x4b, 0xe4, 0x59, 0x90, 0x63, 0x9a, 0xaa, 0x47, 0x16, 0x47, 0xb7, 0x0f, 0x70, 0x31, 0xe1,
	0xe1, 0x3b, 0xea, 0x0f, 0x91, 0x2f, 0xe5, 0x39, 0x84, 0x1d, 0xe6, 0x87, 0x38, 0xca, 0x98, 0x4a,
	0x44, 0x59, 0x02, 0x4b, 0x27, 0x3c, 0x94, 0x64, 0x15, 0x22, 0xcf, 0x6e, 0x17, 0xca, 0x04, 0xc7,
	0xd1, 0xfd, 0xaa, 0x5c, 0xbe, 0x09, 0x57, 0xd6, 0x85, 0xf2, 0xbc, 0x44, 0xd4, 0x0b, 0xa8, 0xf5,
	0x90, 0x5f, 0x52, 0x4e, 0x75, 0xbf, 0xdb, 0x50, 0x1c, 0x53, 0x1e, 0x4a, 0xaa, 0x12, 0x91, 0x67,
	0xbb, 0x01, 0xd6, 0x9d, 0xa8, 0xa2, 0xca, 0x30, 0x33, 0x5c, 0x02, 0x35, 0x6f, 0x7d, 0xac, 0x28,
	0x0e, 0xe5, 0x54, 0x86, 0x56, 0x88, 0x3c, 0x8b, 0xbe, 0xbb, 0x55, 0x9d, 0xa9, 0xa6, 0x40, 0x99,
	0x6e, 0x1b, 0xea, 0x33, 0x4e, 0xd5, 0xce, 0x7f, 0x42, 0x91, 0x71, 0xca, 0x25, 0x69, 0xb9, 0x5d,
	0x3e, 0x95, 0x43, 0x7b, 0xea, 0x71, 0xca, 0x89, 0xbc, 0x70, 0xff, 0x91, 0x39, 0x78, 0x17, 0x5e,
	0x5f, 0xeb, 0x68, 0x80, 0xc5, 0x93, 0x21, 0x66, 0x7d, 0x5f, 0x21, 0x99, 0x21, 0x70, 0xde, 0x26,
	0xb8, 0x7f, 0xa5, 0x86, 0x0c, 0xa7, 0x34, 0x2c, 0x07, 0x0e, 0xa1, 0xda, 0x49, 0x91, 0x72, 0xdc,
	0x36, 0xff, 0x63, 0x30, 0xa9, 0x1f, 0xc9, 0x4e, 0x2e, 0xb7, 0x41, 0x65, 0x74, 0xd1, 0xe9, 0x13,
	0xe1, 0x16, 0x3f, 0xf6, 0x25, 0xa2, 0x37, 0x4c, 0x0e, 0x97, 0x45, 0x32, 0xc3, 0x3d, 0x87, 0xea,
	0x25, 0x46, 0xb8, 0xfa, 0xc7, 0x72, 0x85, 0x2d, 0x2c, 0x16, 0xf6, 0x25, 0xd8, 0x3d, 0xe4, 0x1d,
	0x31, 0x10, 0x29, 0xc6, 0xdb, 0x3f, 0xf6, 0x2b, 0xd8, 0xcf, 0xc5, 0xb7, 0xb7, 0x27, 0xe8, 0xc0,
	0x7e, 0x27, 0x44, 0x7f, 0xa8, 0x76, 0xcf, 0xef, 0x65, 0xf1, 0x3f, 0x1c, 0xf4, 0x90, 0x5f, 0xd1,
	0xe9, 0x06, 0x89, 0xb8, 0xff, 0xc1, 0xe1, 0x43, 0xb0, 0x7a, 0xce, 0x3d, 0x30, 0x47, 0x74, 0xaa,
	0xa7, 0x65, 0x44, 0xa7, 0xee, 0x39, 0x1c, 0x78, 0x9b, 0x12, 0xeb, 0xf0, 0xc2, 0x3c, 0xfc, 0x04,
	0xca, 0xde, 0x7d, 0xec, 0xaf, 0x52, 0xe3, 0x42, 0x25, 0x83, 0x28, 0x0d, 0xcb, 0x30, 0x7f, 0x41,
	0xb5, 0x87, 0x5c, 0x34, 0xc2, 0x0a, 0xa2, 0x4f, 0x50, 0xf5, 0xd6, 0x81, 0x74, 0x87, 0x15, 0x96,
	0x77, 0xd8, 0xe3, 0xf3, 0x77, 0x26, 0x67, 0x44, 0x92, 0x6f, 0x3a, 0x7e, 0x7d, 0xa8, 0x64, 0x2b,
	0x36, 0xed, 0xde, 0x62, 0xbc, 0x7c, 0xb3, 0x35, 0xc0, 0x12, 0x58, 0xbd, 0x59, 0x33, 0x63, 0x26,
	0xdc, 0xcc, 0x65, 0x77, 0x02, 0xd5, 0x6e, 0x9a, 0x26, 0x69, 0xfe, 0xad, 0xc4, 0xce, 0x32, 0xe6,
	0x3b, 0xeb, 0x6f, 0xa8, 0xe9, 0xb1, 0x5b, 0x51, 0xcb, 0xe7, 0x50, 0xed, 0x8a, 0x4f, 0x04, 0xdb,
	0xbe, 0x55, 0xcf, 0xa0, 0xa6, 0x43, 0x37, 0x2d, 0xc2, 0x6b, 0xa8, 0xf7, 0x1e, 0xec, 0x2d, 0x3d,
	0xf8, 0x46, 0x6e, 0xf0, 0x35, 0x4f, 0xe1, 0x31, 0x9e, 0xb3, 0x85, 0x31, 0x9b, 0x71, 0x1d, 0xc1,
	0xae, 0xaf, 0x7c, 0x8e, 0x21, 0xbf, 0x6d, 0x33, 0xdb, 0xf5, 0xa0, 0xb1, 0x38, 0x99, 0xeb, 0x63,
	0xd6, 0xeb, 0xb8, 0x96, 0x3b, 0x35, 0xdf, 0x07, 0xaa, 0xa3, 0x8c, 0xe5, 0x1d, 0xb5, 0x8e, 0xf0,
	0xf3, 0x8e, 0xfc, 0xef, 0xf1, 0xf4, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf8, 0xe7, 0x1e, 0x9a,
	0x91, 0x09, 0x00, 0x00,
}
